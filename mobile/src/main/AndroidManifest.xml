<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (C) 2014 The Android Open Source Project

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.pi.android.brainbeats" >

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="21" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />


    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />

    <application
        android:name="com.pi.android.brainbeats.UAMPApplication"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/UAmpAppTheme"
        android:banner="@drawable/banner_tv">

        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc" />
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <!-- Main activity for music browsing on phone -->
        <activity
            android:name="com.pi.android.brainbeats.ui.MusicPlayerActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <!-- Use this intent filter to get voice searches, like "Play The Beatles" -->
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!-- Placeholder activity for phone UI -->
        <activity
            android:name="com.pi.android.brainbeats.ui.PlaceholderActivity"
            android:label="@string/app_name">
        </activity>

        <!-- Settings activity for phone UI -->
        <activity
            android:name="com.pi.android.brainbeats.settings.SettingsActivity">
        </activity>
        <activity
            android:name="com.pi.android.brainbeats.settings.PreferenceWithHeaders"
            android:label="@string/settings"
            android:parentActivityName="com.pi.android.brainbeats.ui.MusicPlayerActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.pi.android.brainbeats.ui.MusicPlayerActivity" />

        </activity>

        <!-- HeadsetService activity for phone UI -->
        <activity
            android:name="com.pi.android.brainbeats.ui.HeadsetService"
            android:label="@string/app_name">
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!-- Proxy activity that opens either the NowPlaying TV or the mobile UI, depending on
        the current environment -->
        <activity
            android:name="com.pi.android.brainbeats.ui.NowPlayingActivity"
            android:icon="@drawable/ic_launcher">
        </activity>

        <activity android:name=".data.DeleteTagsActivity">
            <intent-filter>
                <action android:name="com.pi.android.brainbeats.DELETE_TAGS_ACTIVITY" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!--
             (OPTIONAL) use this meta data to override the theme from which Android Auto will
             look for colors. If you don't set this, Android Auto will look
             for color attributes in your application theme.
        -->
        <meta-data
            android:name="com.google.android.gms.car.application.theme"
            android:resource="@style/CarTheme" />

        <!--
             (OPTIONAL) use this meta data to override the theme from which Android Wear will
             look for colors. Currently, only background color of the media cards can be set, via
             colorPrimaryDark. If you don't set this custom theme, Android Wear will look
             for colorPrimaryDark attribute in your application theme.
        -->
        <meta-data
            android:name="com.google.android.wearable.media.theme"
            android:resource="@style/WearTheme" />

        <!-- Main music service, provides media browsing and media playback services to
         consumers through MediaBrowserService and MediaSession. Consumers connect to it through
         MediaBrowser (for browsing) and MediaController (for play session control) -->
        <service
            android:name="com.pi.android.brainbeats.MusicService"
            android:exported="true"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>

        <!-- Service that keeps track of reconnecting to Cast when wifi is enabled. -->
        <service
            android:name="com.google.android.libraries.cast.companionlibrary.cast.reconnection.ReconnectionService"/>

        <!-- A full screen activity showing controls and a seek bar for
             the current playing music -->
        <activity
            android:name="com.pi.android.brainbeats.ui.FullScreenPlayerActivity"
            android:label="@string/app_name"
            android:launchMode="singleTop"
            android:parentActivityName="com.pi.android.brainbeats.ui.MusicPlayerActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.pi.android.brainbeats.ui.MusicPlayerActivity"/>
        </activity>

        <!-- A receiver that will receive media buttons and send as
            intents to your MediaBrowserServiceCompat implementation.
            Required on pre-Lollipop. More information at
            http://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html -->
        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <provider
            android:authorities="com.pi.android.brainbeats"
            android:name="com.pi.android.brainbeats.data.TagProvider" />

    </application>

</manifest>
